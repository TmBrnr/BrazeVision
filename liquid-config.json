{
  "displayModes": {
    "friendly": {
      "name": "Friendly", 
      "description": "Readable with some technical context",
      "showTechnical": true,
      "showTooltips": true
    },
    "technical": {
      "name": "Technical",
      "description": "Original syntax with minimal cleaning",
      "showTechnical": true,
      "showTooltips": false
    }
  },
  
  "patterns": {
    "forLoopComplex": {
      "regex": "for\\s+(\\w+)\\s+in\\s+(.*?)(?:\\s+limit:\\s*(\\d+))?\\s*$",
      "friendly": "Loop through {collection} (show {limit} items)",
      "technical": "for {item} in {collection} limit:{limit}",
      "placeholderMap": {
        "item": 1,
        "collection": 2,
        "limit": 3
      },
      "defaults": {
        "limit": "all"
      },
      "priority": 1
    },
    
    "forLoopSimple": {
      "regex": "for\\s+(\\w+)\\s+in\\s+(\\w+)(?:\\s+limit:\\s*(\\d+))?",
      "friendly": "Loop through {collection} (show {limit} items)",
      "technical": "for {item} in {collection} limit:{limit}",
      "placeholderMap": {
        "item": 1,
        "collection": 2,
        "limit": 3
      },
      "defaults": {
        "limit": "all"
      },
      "priority": 2
    },
    
    "endfor": {
      "regex": "endfor",
      "friendly": "End of loop",
      "technical": "endfor"
    },
    
    "ifStatement": {
      "regex": "if\\s+(.+)",
      "friendly": "Show when: {condition}",
      "technical": "if {condition}",
      "placeholderMap": {
        "condition": 1
      }
    },
    
    "endif": {
      "regex": "endif",
      "friendly": "End condition",
      "technical": "endif"
    },
    
    "else": {
      "regex": "else",
      "friendly": "Otherwise",
      "technical": "else"
    },
    
    "elseif": {
      "regex": "elseif\\s+(.+)",
      "friendly": "Or if: {condition}",
      "technical": "elseif {condition}",
      "placeholderMap": {
        "condition": 1
      }
    },
    
    "catalogItems": {
      "regex": "catalog_items\\s+(\\w+)\\s+(.+)",
      "friendly": "Fetch {type}: {source}",
      "technical": "catalog_items {type} {source}",
      "placeholderMap": {
        "type": 1,
        "source": 2
      }
    },
    
    "assignment": {
      "regex": "assign\\s+(\\w+)\\s*=\\s*(.+)",
      "friendly": "Set {variable} to {value}",
      "technical": "assign {variable} = {value}",
      "placeholderMap": {
        "variable": 1,
        "value": 2
      }
    },
    
    "include": {
      "regex": "include\\s+['\"]([^'\"]+)['\"]",
      "friendly": "Include template: {template}",
      "technical": "include '{template}'",
      "placeholderMap": {
        "template": 1
      }
    },
    
    "capture": {
      "regex": "capture\\s+(\\w+)",
      "friendly": "Start capturing as {variable}",
      "technical": "capture {variable}",
      "placeholderMap": {
        "variable": 1
      }
    },
    
    "endcapture": {
      "regex": "endcapture",
      "friendly": "Stop capturing",
      "technical": "endcapture"
    },
    
    "unless": {
      "regex": "unless\\s+(.+)",
      "friendly": "Hide when: {condition}",
      "technical": "unless {condition}",
      "placeholderMap": {
        "condition": 1
      }
    },
    
    "endunless": {
      "regex": "endunless",
      "friendly": "End hide condition",
      "technical": "endunless"
    },
    
    "case": {
      "regex": "case\\s+(.+)",
      "friendly": "Check value of: {variable}",
      "technical": "case {variable}",
      "placeholderMap": {
        "variable": 1
      }
    },
    
    "when": {
      "regex": "when\\s+(.+)",
      "friendly": "When equals: {value}",
      "technical": "when {value}",
      "placeholderMap": {
        "value": 1
      }
    },
    
    "endcase": {
      "regex": "endcase",
      "friendly": "End value check",
      "technical": "endcase"
    },
    
    "comment": {
      "regex": "comment",
      "friendly": "Hidden note starts",
      "technical": "comment"
    },
    
    "endcomment": {
      "regex": "endcomment", 
      "friendly": "Hidden note ends",
      "technical": "endcomment"
    }
  },
  
  "variables": {
    "email_address": {
      "friendly": "email address",
      "description": "User's email address"
    },
    
    "first_name": {
      "friendly": "first name", 
      "description": "User's first name"
    },
    
    "last_name": {
      "friendly": "last name",
      "description": "User's last name"
    },
    
    "full_name": {
      "friendly": "full name",
      "description": "User's complete name"
    },
    
    "user_name": {
      "friendly": "username",
      "description": "User's display name"
    },
    
    "user_id": {
      "friendly": "user ID",
      "description": "Unique user identifier"
    },
    
    "phone_number": {
      "friendly": "phone number",
      "description": "User's phone number"
    },
    
    "city": {
      "friendly": "city",
      "description": "User's city"
    },
    
    "country": {
      "friendly": "country",
      "description": "User's country"
    },
    
    "language": {
      "friendly": "language",
      "description": "User's preferred language"
    },
    
    "custom_attribute": {
      "friendly": "custom information",
      "description": "Custom user information"
    },
    
    "product": {
      "friendly": "product",
      "description": "Product information"
    },
    
    "products": {
      "friendly": "products",
      "description": "Collection of products"
    },
    
    "catalog_items": {
      "friendly": "catalog items",
      "description": "Product catalog data"
    },
    
    "content_blocks": {
      "friendly": "content blocks",
      "description": "Content block data"
    },
    
    "recommended_products": {
      "friendly": "recommended products",
      "description": "Product recommendations"
    },
    
    "cart": {
      "friendly": "shopping cart",
      "description": "User's shopping cart"
    },
    
    "order": {
      "friendly": "order",
      "description": "User's order information"
    },
    
    "purchase_history": {
      "friendly": "purchase history",
      "description": "User's previous purchases"
    },
    
    "preferences": {
      "friendly": "preferences",
      "description": "User's preferences and settings"
    },
    
    "subscription": {
      "friendly": "subscription",
      "description": "User's subscription information"
    },
    
    "campaign": {
      "friendly": "campaign",
      "description": "Current marketing campaign"
    }
  },
  
  "filters": {
    "limit": {
      "friendly": "limited to {value} items",
      "description": "Restricts the number of items shown"
    },
    
    "default": {
      "friendly": "default: {value}",
      "description": "Fallback value if empty"
    },
    
    "capitalize": {
      "friendly": "with first letter capitalized", 
      "description": "Makes the first letter uppercase"
    },
    
    "truncate": {
      "friendly": "truncated to {value} characters",
      "description": "Cuts off text at specified length"
    },
    
    "id": {
      "friendly": "ID: {value}",
      "description": "Sets an identifier"
    },
    
    "upcase": {
      "friendly": "uppercase",
      "description": "Converts text to uppercase"
    },
    
    "downcase": {
      "friendly": "lowercase", 
      "description": "Converts text to lowercase"
    },
    
    "strip": {
      "friendly": "whitespace removed",
      "description": "Removes leading and trailing whitespace"
    },
    
    "escape": {
      "friendly": "HTML escaped",
      "description": "Escapes HTML characters"
    }
  },
  
  "styling": {
    "friendly": {
      "backgroundColor": "rgba(59, 130, 246, 0.1)", 
      "color": "#1e40af",
      "fontWeight": "500",
      "fontSize": "inherit",
      "padding": "2px 6px",
      "borderRadius": "4px"
    },
    
    "technical": {
      "backgroundColor": "rgba(75, 85, 99, 0.1)",
      "color": "#374151", 
      "fontWeight": "600",
      "fontSize": "0.95em",
      "padding": "2px 4px",
      "borderRadius": "3px",
      "fontFamily": "'SF Mono', Monaco, 'Cascadia Code', monospace"
    }
  },
  
  "replacements": {
    "collections": {
      "custom_attribute": "user data",
      "content_blocks": "content",
      "catalog_items": "products"
    },
    
    "objects": {
      "email_address": "email",
      "first_name": "first name",
      "last_name": "last name"
    }
  },
  
  "variablePatterns": {
    "dollarBrace": "\\$\\{([^}]+)\\}",
    "doubleBrace": "\\{\\{([^}]+)\\}\\}",
    "complexPath": "([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z0-9_\\${}.\\s\"'-]+)*)"
  }
} 