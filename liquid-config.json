{
  "displayModes": {
    "friendly": {
      "name": "Friendly", 
      "description": "Readable with some technical context",
      "showTechnical": true,
      "showTooltips": true
    },
    "technical": {
      "name": "Technical",
      "description": "Original syntax with minimal cleaning",
      "showTechnical": true,
      "showTooltips": false
    }
  },
  
  "patterns": {
    "forLoopComplex": {
      "regex": "for\\s+(\\w+)\\s+in\\s+(.*?)(?:\\s+limit:\\s*(\\d+))?\\s*$",
      "friendly": "Repeat for each {collection} (showing {limit} items)",
      "technical": "for {item} in {collection} limit:{limit}",
      "placeholderMap": {
        "item": 1,
        "collection": 2,
        "limit": 3
      },
      "defaults": {
        "limit": "all"
      },
      "priority": 1
    },
    
    "forLoopSimple": {
      "regex": "for\\s+(\\w+)\\s+in\\s+(\\w+)(?:\\s+limit:\\s*(\\d+))?",
      "friendly": "Repeat for each {collection} (showing {limit} items)",
      "technical": "for {item} in {collection} limit:{limit}",
      "placeholderMap": {
        "item": 1,
        "collection": 2,
        "limit": 3
      },
      "defaults": {
        "limit": "all"
      },
      "priority": 2
    },
    
    "endfor": {
      "regex": "endfor",
      "friendly": "End repeating section",
      "technical": "endfor"
    },
    
    "ifStatement": {
      "regex": "if\\s+(.+)",
      "friendly": "Show when: {condition}",
      "technical": "if {condition}",
      "placeholderMap": {
        "condition": 1
      }
    },
    
    "endif": {
      "regex": "endif",
      "friendly": "End conditional section",
      "technical": "endif"
    },
    
    "else": {
      "regex": "else",
      "friendly": "Otherwise show",
      "technical": "else"
    },
    
    "elseif": {
      "regex": "elseif\\s+(.+)",
      "friendly": "Or show when: {condition}",
      "technical": "elseif {condition}",
      "placeholderMap": {
        "condition": 1
      }
    },
    
    "catalogItems": {
      "regex": "catalog_items\\s+((?:\\{\\{[^}]+\\}\\}|\\w+))\\s+(.+)",
      "friendly": "Fetch {catalog_name} data: {items}",
      "technical": "catalog_items {catalog_name} {items}",
      "placeholderMap": {
        "catalog_name": 1,
        "items": 2
      },
      "priority": 5
    },
    
    "catalogItemsSimple": {
      "regex": "catalog_items\\s+(\\w+)\\s+(\\w+)$",
      "friendly": "Fetch {catalog_name} item: {item_id}",
      "technical": "catalog_items {catalog_name} {item_id}",
      "placeholderMap": {
        "catalog_name": 1,
        "item_id": 2
      },
      "priority": 1
    },
    
    "catalogItemsMultiple": {
      "regex": "catalog_items\\s+(\\w+)\\s+([\\d\\s]+)$",
      "friendly": "Fetch multiple {catalog_name} items ({item_ids})",
      "technical": "catalog_items {catalog_name} {item_ids}",
      "placeholderMap": {
        "catalog_name": 1,
        "item_ids": 2
      },
      "priority": 2
    },
    
    "catalogItemsWithRerender": {
      "regex": "catalog_items\\s+(\\w+)\\s+(\\w+)\\s+:rerender",
      "friendly": "Fetch and refresh {catalog_name} item: {item_id}",
      "technical": "catalog_items {catalog_name} {item_id} :rerender",
      "placeholderMap": {
        "catalog_name": 1,
        "item_id": 2
      },
      "priority": 1
    },
    
    "catalogSelectionItems": {
      "regex": "catalog_selection_items\\s+(\\w+)\\s+(\\w+)",
      "friendly": "Fetch {catalog_name} group: {selection_name}",
      "technical": "catalog_selection_items {catalog_name} {selection_name}",
      "placeholderMap": {
        "catalog_name": 1,
        "selection_name": 2
      },
      "priority": 1
    },
    
    "catalogBasic": {
      "regex": "catalog_items\\s+(\\w+)$",
      "friendly": "Access {catalog_name} data",
      "technical": "catalog_items {catalog_name}",
      "placeholderMap": {
        "catalog_name": 1
      },
      "priority": 3
    },
    
    "assignment": {
      "regex": "assign\\s+(\\w+)\\s*=\\s*(.+)",
      "friendly": "Set {variable} to {value}",
      "technical": "assign {variable} = {value}",
      "placeholderMap": {
        "variable": 1,
        "value": 2
      }
    },
    
    "include": {
      "regex": "include\\s+['\"]([^'\"]+)['\"]",
      "friendly": "Insert template: {template}",
      "technical": "include '{template}'",
      "placeholderMap": {
        "template": 1
      }
    },
    
    "capture": {
      "regex": "capture\\s+(\\w+)",
      "friendly": "Start saving content as {variable}",
      "technical": "capture {variable}",
      "placeholderMap": {
        "variable": 1
      }
    },
    
    "endcapture": {
      "regex": "endcapture",
      "friendly": "Stop saving content",
      "technical": "endcapture"
    },
    
    "unless": {
      "regex": "unless\\s+(.+)",
      "friendly": "Hide when: {condition}",
      "technical": "unless {condition}",
      "placeholderMap": {
        "condition": 1
      }
    },
    
    "endunless": {
      "regex": "endunless",
      "friendly": "End hidden section",
      "technical": "endunless"
    },
    
    "case": {
      "regex": "case\\s+(.+)",
      "friendly": "Check value of: {variable}",
      "technical": "case {variable}",
      "placeholderMap": {
        "variable": 1
      }
    },
    
    "when": {
      "regex": "when\\s+(.+)",
      "friendly": "When value is: {value}",
      "technical": "when {value}",
      "placeholderMap": {
        "value": 1
      }
    },
    
    "endcase": {
      "regex": "endcase",
      "friendly": "End value check",
      "technical": "endcase"
    },
    
    "comment": {
      "regex": "comment",
      "friendly": "Start note section",
      "technical": "comment"
    },
    
    "endcomment": {
      "regex": "endcomment", 
      "friendly": "End note section",
      "technical": "endcomment"
    },
    
    "abortMessage": {
      "regex": "abort_message\\((.*)\\)",
      "friendly": "Don't send message because: {reason}",
      "technical": "abort_message({reason})",
      "placeholderMap": {
        "reason": 1
      }
    },
    
    "promotion": {
      "regex": "promotion\\s+(\\w+)",
      "friendly": "Apply discount: {promo_name}",
      "technical": "promotion {promo_name}",
      "placeholderMap": {
        "promo_name": 1
      }
    },
    
    "connectedContent": {
      "regex": "connected_content\\s+(.+)",
      "friendly": "Get data from website: {url}",
      "technical": "connected_content {url}",
      "placeholderMap": {
        "url": 1
      }
    },
    
    "render": {
      "regex": "render\\s+['\"]([^'\"]+)['\"]",
      "friendly": "Display template: {template}",
      "technical": "render '{template}'",
      "placeholderMap": {
        "template": 1
      }
    }
  },
  
  "variables": {
    "city": {
      "friendly": "user's city",
      "description": "User's current city",
      "category": "standard"
    },
    "country": {
      "friendly": "user's country",
      "description": "User's current country",
      "category": "standard"
    },
    "date_of_birth": {
      "friendly": "date of birth",
      "description": "User's birth date",
      "category": "standard"
    },
    "email_address": {
      "friendly": "email address",
      "description": "User's email address",
      "category": "standard"
    },
    "first_name": {
      "friendly": "first name", 
      "description": "User's first name",
      "category": "standard"
    },
    "gender": {
      "friendly": "gender",
      "description": "User's gender",
      "category": "standard"
    },
    "language": {
      "friendly": "preferred language",
      "description": "User's language preference",
      "category": "standard"
    },
    "last_name": {
      "friendly": "last name",
      "description": "User's last name",
      "category": "standard"
    },
    "last_used_app_date": {
      "friendly": "last app usage date",
      "description": "When user last opened the app",
      "category": "standard"
    },
    "most_recent_app_version": {
      "friendly": "current app version",
      "description": "User's most recent app version",
      "category": "standard"
    },
    "most_recent_locale": {
      "friendly": "current locale",
      "description": "User's most recent locale setting",
      "category": "standard"
    },
    "most_recent_location": {
      "friendly": "current location",
      "description": "User's most recent location",
      "category": "standard"
    },
    "phone_number": {
      "friendly": "phone number",
      "description": "User's phone number",
      "category": "standard"
    },
    "time_zone": {
      "friendly": "time zone",
      "description": "User's time zone",
      "category": "standard"
    },
    "user_id": {
      "friendly": "user ID",
      "description": "Unique user identifier",
      "category": "standard"
    },
    "braze_id": {
      "friendly": "Braze ID",
      "description": "Internal Braze user identifier",
      "category": "standard"
    },
    "random_bucket_number": {
      "friendly": "random bucket number",
      "description": "Random number for A/B testing",
      "category": "standard"
    },
    "age": {
      "friendly": "age",
      "description": "User's age",
      "category": "standard"
    },
    "subscribed_state.email_global": {
      "friendly": "global email subscription status",
      "description": "User's global email subscription state",
      "category": "subscription"
    },
    "most_recently_used_device.carrier": {
      "friendly": "mobile carrier",
      "description": "User's mobile service provider",
      "category": "device"
    },
    "most_recently_used_device.id": {
      "friendly": "device ID",
      "description": "Unique device identifier",
      "category": "device"
    },
    "most_recently_used_device.idfa": {
      "friendly": "iOS advertising ID",
      "description": "iOS Identifier for Advertising",
      "category": "device"
    },
    "most_recently_used_device.model": {
      "friendly": "device model",
      "description": "Device model name (e.g., iPhone 14)",
      "category": "device"
    },
    "most_recently_used_device.os": {
      "friendly": "operating system",
      "description": "Device operating system and version",
      "category": "device"
    },
    "most_recently_used_device.platform": {
      "friendly": "device platform",
      "description": "Device platform (iOS, Android, etc.)",
      "category": "device"
    },
    "most_recently_used_device.google_ad_id": {
      "friendly": "Google advertising ID",
      "description": "Google Play Advertising Identifier",
      "category": "device"
    },
    "most_recently_used_device.roku_ad_id": {
      "friendly": "Roku advertising ID",
      "description": "Roku Advertising Identifier",
      "category": "device"
    },
    "most_recently_used_device.foreground_push_enabled": {
      "friendly": "push notification status",
      "description": "Whether foreground push is enabled",
      "category": "device"
    },
    "most_recently_used_device.browser": {
      "friendly": "browser type",
      "description": "User's most recent browser",
      "category": "device"
    },
    "most_recently_used_device.ad_tracking_enabled": {
      "friendly": "ad tracking status",
      "description": "Whether ad tracking is enabled",
      "category": "device"
    },
    "targeted_device.id": {
      "friendly": "target device ID",
      "description": "ID of device receiving this message",
      "category": "targeted_device"
    },
    "targeted_device.carrier": {
      "friendly": "target device carrier",
      "description": "Carrier of device receiving this message",
      "category": "targeted_device"
    },
    "targeted_device.idfa": {
      "friendly": "target device iOS ad ID",
      "description": "iOS ad ID of target device",
      "category": "targeted_device"
    },
    "targeted_device.google_ad_id": {
      "friendly": "target device Google ad ID",
      "description": "Google ad ID of target device",
      "category": "targeted_device"
    },
    "targeted_device.roku_ad_id": {
      "friendly": "target device Roku ad ID",
      "description": "Roku ad ID of target device",
      "category": "targeted_device"
    },
    "targeted_device.model": {
      "friendly": "target device model",
      "description": "Model of device receiving this message",
      "category": "targeted_device"
    },
    "targeted_device.os": {
      "friendly": "target device OS",
      "description": "OS of device receiving this message",
      "category": "targeted_device"
    },
    "targeted_device.platform": {
      "friendly": "target device platform",
      "description": "Platform of device receiving this message",
      "category": "targeted_device"
    },
    "targeted_device.foreground_push_enabled": {
      "friendly": "target device push status",
      "description": "Push status of target device",
      "category": "targeted_device"
    },
    "set_user_to_unsubscribed_url": {
      "friendly": "unsubscribe link",
      "description": "Link to unsubscribe from emails",
      "category": "email"
    },
    "set_user_to_subscribed_url": {
      "friendly": "resubscribe link",
      "description": "Link to resubscribe to emails",
      "category": "email"
    },
    "set_user_to_opted_in_url": {
      "friendly": "opt-in link",
      "description": "Link to opt into email marketing",
      "category": "email"
    },
    "unsubscribe_url": {
      "friendly": "unsubscribe link (legacy)",
      "description": "Legacy unsubscribe link",
      "category": "email"
    },
    "sms.inbound_message_body": {
      "friendly": "received SMS text",
      "description": "Text content of received SMS",
      "category": "sms"
    },
    "sms.inbound_media_urls": {
      "friendly": "received SMS media",
      "description": "Media URLs from received SMS",
      "category": "sms"
    },
    "whats_app.inbound_message_body": {
      "friendly": "received WhatsApp text",
      "description": "Text content of received WhatsApp message",
      "category": "whatsapp"
    },
    "whats_app.inbound_media_urls": {
      "friendly": "received WhatsApp media",
      "description": "Media URLs from received WhatsApp message",
      "category": "whatsapp"
    },
    "campaign.api_id": {
      "friendly": "campaign API ID",
      "description": "Unique API identifier for this campaign",
      "category": "campaign"
    },
    "campaign.dispatch_id": {
      "friendly": "campaign dispatch ID",
      "description": "Unique identifier for this message send",
      "category": "campaign"
    },
    "campaign.name": {
      "friendly": "campaign name",
      "description": "Name of the current campaign",
      "category": "campaign"
    },
    "campaign.message_name": {
      "friendly": "message name",
      "description": "Name of this specific message",
      "category": "campaign"
    },
    "campaign.message_api_id": {
      "friendly": "message API ID",
      "description": "API identifier for this message",
      "category": "campaign"
    },
    "canvas.name": {
      "friendly": "Canvas name",
      "description": "Name of the Canvas journey",
      "category": "canvas"
    },
    "canvas.api_id": {
      "friendly": "Canvas API ID",
      "description": "Unique API identifier for this Canvas",
      "category": "canvas"
    },
    "canvas.variant_name": {
      "friendly": "Canvas variant name",
      "description": "Name of the Canvas variant/path",
      "category": "canvas"
    },
    "canvas.variant_api_id": {
      "friendly": "Canvas variant API ID",
      "description": "API identifier for this Canvas variant",
      "category": "canvas"
    },
    "card.api_id": {
      "friendly": "card API ID",
      "description": "Unique API identifier for this content card",
      "category": "card"
    },
    "card.name": {
      "friendly": "card name",
      "description": "Name of this content card",
      "category": "card"
    },
    "event_properties.geofence_name": {
      "friendly": "geofence location name",
      "description": "Name of the triggered geofence",
      "category": "geofence"
    },
    "event_properties.geofence_set_name": {
      "friendly": "geofence group name",
      "description": "Name of the geofence group/set",
      "category": "geofence"
    },
    "app.api_id": {
      "friendly": "app API ID",
      "description": "API identifier of the requesting app",
      "category": "app"
    },
    "app.name": {
      "friendly": "app name",
      "description": "Name of the requesting app",
      "category": "app"
    },
    "custom_attribute": {
      "friendly": "custom information",
      "description": "Custom user information",
      "category": "custom"
    },
    "event_properties": {
      "friendly": "event data",
      "description": "Custom event properties",
      "category": "event"
    },
    "api_trigger_properties": {
      "friendly": "API trigger data",
      "description": "Properties from API-triggered campaigns",
      "category": "api"
    },
    "context": {
      "friendly": "Canvas context data",
      "description": "Canvas step context variables",
      "category": "canvas"
    },
    "full_name": {
      "friendly": "full name",
      "description": "User's complete name",
      "category": "standard"
    },
    "user_name": {
      "friendly": "username",
      "description": "User's display name",
      "category": "standard"
    },
    "product": {
      "friendly": "product",
      "description": "Product information",
      "category": "commerce"
    },
    "products": {
      "friendly": "products",
      "description": "Collection of products",
      "category": "commerce"
    },
    "catalog_items": {
      "friendly": "catalog data",
      "description": "Data from catalog items",
      "category": "catalog"
    },
    "content_blocks": {
      "friendly": "content blocks",
      "description": "Content block data",
      "category": "content"
    },
    "recommended_products": {
      "friendly": "recommended products",
      "description": "Product recommendations",
      "category": "commerce"
    },
    "cart": {
      "friendly": "shopping cart",
      "description": "User's shopping cart",
      "category": "commerce"
    },
    "order": {
      "friendly": "order",
      "description": "User's order information",
      "category": "commerce"
    },
    "purchase_history": {
      "friendly": "purchase history",
      "description": "User's previous purchases",
      "category": "commerce"
    },
    "preferences": {
      "friendly": "preferences",
      "description": "User's preferences and settings",
      "category": "standard"
    },
    "subscription": {
      "friendly": "subscription",
      "description": "User's subscription information",
      "category": "subscription"
    },
    
    "__http_status_code__": {
      "friendly": "HTTP status code",
      "description": "HTTP response status code from connected content",
      "category": "connected_content"
    },
    
    "result": {
      "friendly": "API response data",
      "description": "Data fetched from connected content API",
      "category": "connected_content"
    },
    
    "my_content": {
      "friendly": "fetched content",
      "description": "Content retrieved from external API",
      "category": "connected_content"
    },
    
    "publication": {
      "friendly": "publication data",
      "description": "Publication information from API",
      "category": "connected_content"
    },
    
    "postbody": {
      "friendly": "POST request body",
      "description": "JSON body for POST requests",
      "category": "connected_content"
    },
    
    "items": {
      "friendly": "catalog items",
      "description": "Array of items from catalog",
      "category": "catalog"
    },
    
    "venue_name": {
      "friendly": "venue name",
      "description": "Name of the venue from catalog",
      "category": "catalog"
    },
    
    "title": {
      "friendly": "title",
      "description": "Item title from catalog",
      "category": "catalog"
    },
    
    "price": {
      "friendly": "price",
      "description": "Item price from catalog",
      "category": "catalog"
    },
    
    "image_link": {
      "friendly": "image URL",
      "description": "Image link from catalog item",
      "category": "catalog"
    },
    
    "wishlist": {
      "friendly": "wishlist",
      "description": "User's wishlist items",
      "category": "custom"
    },
    
    "Welcome_Message": {
      "friendly": "welcome message",
      "description": "Welcome message from catalog",
      "category": "catalog"
    }
  },
  
  "filters": {
    "limit": {
      "friendly": "showing only {value} items",
      "description": "Restricts the number of items shown"
    },
    
    "default": {
      "friendly": "with fallback: {value}",
      "description": "Fallback value if empty"
    },
    
    "capitalize": {
      "friendly": "with first letter capitalized", 
      "description": "Makes the first letter uppercase"
    },
    
    "truncate": {
      "friendly": "shortened to {value} characters",
      "description": "Cuts off text at specified length"
    },
    
    "id": {
      "friendly": "with identifier: {value}",
      "description": "Sets an identifier"
    },
    
    "upcase": {
      "friendly": "converted to uppercase",
      "description": "Converts text to uppercase"
    },
    
    "downcase": {
      "friendly": "converted to lowercase", 
      "description": "Converts text to lowercase"
    },
    
    "strip": {
      "friendly": "with extra spaces removed",
      "description": "Removes leading and trailing whitespace"
    },
    
    "escape": {
      "friendly": "with special characters protected",
      "description": "Escapes HTML characters"
    },
    
    "plus": {
      "friendly": "plus {value}",
      "description": "Adds a number to the input"
    },
    
    "minus": {
      "friendly": "minus {value}",
      "description": "Subtracts a number from the input"
    },
    
    "times": {
      "friendly": "multiplied by {value}",
      "description": "Multiplies the input by a number"
    },
    
    "divided_by": {
      "friendly": "divided by {value}",
      "description": "Divides the input by a number"
    },
    
    "where": {
      "friendly": "filtered by {value}",
      "description": "Filters array by property value"
    },
    
    "first": {
      "friendly": "showing first item only",
      "description": "Gets the first item from an array"
    },
    
    "last": {
      "friendly": "showing last item only", 
      "description": "Gets the last item from an array"
    },
    
    "size": {
      "friendly": "counting items",
      "description": "Returns the size of an array or string"
    },
    
    "sort": {
      "friendly": "arranged in order",
      "description": "Sorts an array"
    },
    
    "reverse": {
      "friendly": "arranged in reverse order",
      "description": "Reverses the order of an array"
    },
    
    "uniq": {
      "friendly": "showing unique items only",
      "description": "Removes duplicate items from an array"
    },
    
    "map": {
      "friendly": "extracting {value} from each",
      "description": "Extracts property values from array objects"
    },
    
    "join": {
      "friendly": "combined with {value}",
      "description": "Joins array elements with a separator"
    },
    
    "split": {
      "friendly": "separated by {value}",
      "description": "Splits a string into an array"
    },
    
    "replace": {
      "friendly": "replacing {value}",
      "description": "Replaces text with another value"
    },
    
    "remove": {
      "friendly": "removing {value}",
      "description": "Removes specified text"
    },
    
    "append": {
      "friendly": "adding {value} to end",
      "description": "Adds text to the end"
    },
    
    "prepend": {
      "friendly": "adding {value} to beginning",
      "description": "Adds text to the beginning"
    },
    
    "date": {
      "friendly": "formatted as {value}",
      "description": "Formats a date"
    },
    
    "round": {
      "friendly": "rounded to whole number",
      "description": "Rounds a number"
    },
    
    "abs": {
      "friendly": "converted to positive number",
      "description": "Returns absolute value of a number"
    },

    "compact": {
      "friendly": "with empty items removed",
      "description": "Removes any nil items from an array"
    },
    
    "concat": {
      "friendly": "combined with {value}",
      "description": "Combines an array with another array"
    },
    
    "index": {
      "friendly": "showing item at position {value}",
      "description": "Returns the item at the specified index location in an array"
    },
    
    "sort_natural": {
      "friendly": "arranged alphabetically",
      "description": "Sorts items in case-insensitive alphabetical order"
    },
    
    "at_most": {
      "friendly": "capped at {value}",
      "description": "Limits a number to a maximum value"
    },
    
    "at_least": {
      "friendly": "with minimum of {value}",
      "description": "Limits a number to a minimum value"
    },
    
    "ceil": {
      "friendly": "rounded up to whole number",
      "description": "Rounds an output up to the nearest integer"
    },
    
    "floor": {
      "friendly": "rounded down to whole number",
      "description": "Rounds an output down to the nearest integer"
    },
    
    "modulo": {
      "friendly": "showing remainder when divided by {value}",
      "description": "Divides by a number and returns the remainder"
    },
    
    "money": {
      "friendly": "formatted as currency",
      "description": "Formats numbers with proper decimal places"
    },
    
    "camelcase": {
      "friendly": "formatted as CamelCase",
      "description": "Converts a string into CamelCase (not supported in Braze)"
    },
    
    "handle": {
      "friendly": "formatted as web address",
      "description": "Formats a string into a handle (not supported in Braze)"
    },
    
    "handleize": {
      "friendly": "formatted as web address",
      "description": "Formats a string into a handle (not supported in Braze)"
    },
    
    "md5": {
      "friendly": "converted to secure code",
      "description": "Converts a string into an MD5 hash"
    },
    
    "sha1": {
      "friendly": "converted to secure code",
      "description": "Converts a string into a SHA-1 hash"
    },
    
    "hmac_sha1_hex": {
      "friendly": "securely encoded with {value}",
      "description": "Converts a string into a SHA-1 hash using HMAC"
    },
    
    "hmac_sha_1": {
      "friendly": "securely encoded with {value}",
      "description": "Converts a string into a SHA-1 hash using HMAC (legacy)"
    },
    
    "hmac_sha256": {
      "friendly": "securely encoded with {value}",
      "description": "Converts a string into a SHA-256 hash using HMAC"
    },
    
    "hmac_sha512": {
      "friendly": "securely encoded with {value}",
      "description": "Converts a string into a SHA-512 hash using HMAC"
    },
    
    "newline_to_br": {
      "friendly": "with line breaks converted for web",
      "description": "Inserts HTML <br> tags for line breaks"
    },
    
    "pluralize": {
      "friendly": "made singular or plural",
      "description": "Outputs singular or plural based on number (not supported in Braze)"
    },
    
    "remove_first": {
      "friendly": "removing first occurrence of {value}",
      "description": "Removes only the first occurrence of a substring"
    },
    
    "replace_first": {
      "friendly": "replacing first occurrence of {value}",
      "description": "Replaces the first occurrence of a string"
    },
    
    "slice": {
      "friendly": "starting from position {value}",
      "description": "Returns a substring starting at the specified index"
    },
    
    "lstrip": {
      "friendly": "with left spaces removed",
      "description": "Strips whitespace from the left side (not supported in Braze)"
    },
    
    "rstrip": {
      "friendly": "with right spaces removed", 
      "description": "Strips whitespace from the right side (not supported in Braze)"
    },
    
    "strip_html": {
      "friendly": "with web formatting removed",
      "description": "Strips all HTML tags from a string"
    },
    
    "strip_newlines": {
      "friendly": "with line breaks removed",
      "description": "Removes any line breaks/newlines from a string"
    },
    
    "truncatewords": {
      "friendly": "shortened to {value} words",
      "description": "Truncates a string to the specified number of words"
    },
    
    "format_address": {
      "friendly": "formatted as mailing address",
      "description": "Formats an address by locale (not supported in Braze)"
    },
    
    "highlight": {
      "friendly": "with search terms highlighted",
      "description": "Wraps search results with HTML highlight tags (not supported in Braze)"
    },
    
    "time_zone": {
      "friendly": "converted to {value} time zone",
      "description": "Converts time to specified time zone"
    },
    
    "money_with_currency": {
      "friendly": "formatted as currency with symbol",
      "description": "Formats numbers with currency symbol (not supported in Braze)"
    },
    
    "money_without_currency": {
      "friendly": "formatted as currency without symbol",
      "description": "Formats numbers without currency symbol (not supported in Braze)"
    },
    
    "json_escape": {
      "friendly": "prepared for data transfer",
      "description": "Escapes special characters for JSON format"
    },
    
    "url_param_escape": {
      "friendly": "prepared for web address",
      "description": "Escapes characters for safe URL parameter usage"
    }
  },
  
  "operators": {
    "==": {
      "friendly": "equals",
      "technical": "==",
      "description": "Checks if two values are equal",
      "type": "comparison"
    },
    "!=": {
      "friendly": "does not equal",
      "technical": "!=", 
      "description": "Checks if two values are not equal",
      "type": "comparison"
    },
    ">": {
      "friendly": "is greater than",
      "technical": ">",
      "description": "Checks if left value is greater than right value",
      "type": "comparison"
    },
    "<": {
      "friendly": "is less than",
      "technical": "<",
      "description": "Checks if left value is less than right value", 
      "type": "comparison"
    },
    ">=": {
      "friendly": "is greater than or equal to",
      "technical": ">=",
      "description": "Checks if left value is greater than or equal to right value",
      "type": "comparison"
    },
    "<=": {
      "friendly": "is less than or equal to", 
      "technical": "<=",
      "description": "Checks if left value is less than or equal to right value",
      "type": "comparison"
    },
    "or": {
      "friendly": "or",
      "technical": "or",
      "description": "Logical OR - true if either condition A or condition B is true",
      "type": "logical"
    },
    "and": {
      "friendly": "and",
      "technical": "and", 
      "description": "Logical AND - true only if both condition A and condition B are true",
      "type": "logical"
    },
    "contains": {
      "friendly": "contains",
      "technical": "contains",
      "description": "Checks if a string or array contains a specific value",
      "type": "comparison"
    }
  },
  
  "styling": {
    "friendly": {
      "backgroundColor": "rgba(59, 130, 246, 0.1)", 
      "color": "#1e40af",
      "fontWeight": "500",
      "fontSize": "inherit",
      "padding": "2px 6px",
      "borderRadius": "4px"
    },
    
    "technical": {
      "backgroundColor": "rgba(75, 85, 99, 0.1)",
      "color": "#374151", 
      "fontWeight": "600",
      "fontSize": "0.95em",
      "padding": "2px 4px",
      "borderRadius": "3px",
      "fontFamily": "'SF Mono', Monaco, 'Cascadia Code', monospace"
    }
  },
  
  "replacements": {
    "collections": {
      "custom_attribute": "user data",
      "content_blocks": "content",
      "catalog_items": "products"
    },
    
    "objects": {
      "email_address": "email",
      "first_name": "first name",
      "last_name": "last name"
    }
  },
  
  "variablePatterns": {
    "dollarBrace": "\\$\\{([^}]+)\\}",
    "doubleBrace": "\\{\\{([^}]+)\\}\\}",
    "complexPath": "([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z0-9_\\${}.\\s\"'-]+)*)",
    "brazePersonalization": "\\{\\{\\$\\{([^}]+)\\}\\}\\}",
    "brazeNestedObject": "\\{\\{([a-zA-Z_][a-zA-Z0-9_]*)\\.\\$\\{([^}]+)\\}\\}\\}",
    "brazeObjectProperty": "\\{\\{([a-zA-Z_][a-zA-Z0-9_]*)\\.([a-zA-Z_][a-zA-Z0-9_]*)\\}\\}",
    "subscriptionState": "\\{\\{subscribed_state\\.\\$\\{([^}]+)\\}\\}\\}"
  },

  "dynamicPatterns": {
    "subscribed_state": {
      "pattern": "subscribed_state.${subscription_id}",
      "friendly": "subscription status for {subscription_id}",
      "description": "User's subscription status for a specific subscription group",
      "category": "subscription"
    },
    "event_properties": {
      "pattern": "event_properties.${property_name}", 
      "friendly": "event data: {property_name}",
      "description": "Custom event property value",
      "category": "event"
    },
    "custom_attribute": {
      "pattern": "custom_attribute.${attribute_name}",
      "friendly": "custom {attribute_name}",
      "description": "Custom user attribute value", 
      "category": "custom"
    },
    "most_recently_used_device": {
      "pattern": "most_recently_used_device.${device_property}",
      "friendly": "{device_property} (current device)",
      "description": "Property from user's most recent device",
      "category": "device"
    },
    "targeted_device": {
      "pattern": "targeted_device.${device_property}",
      "friendly": "{device_property} (target device)",
      "description": "Property from device receiving this message",
      "category": "targeted_device"
    },
    "campaign": {
      "pattern": "campaign.${campaign_property}",
      "friendly": "campaign {campaign_property}",
      "description": "Campaign metadata property",
      "category": "campaign"
    },
    "canvas": {
      "pattern": "canvas.${canvas_property}",
      "friendly": "Canvas {canvas_property}",
      "description": "Canvas journey metadata property",
      "category": "canvas"
    },
    "card": {
      "pattern": "card.${card_property}",
      "friendly": "card {card_property}",
      "description": "Content card metadata property",
      "category": "card"
    },
    "app": {
      "pattern": "app.${app_property}",
      "friendly": "app {app_property}",
      "description": "Application metadata property",
      "category": "app"
    },
    "sms": {
      "pattern": "sms.${sms_property}",
      "friendly": "SMS {sms_property}",
      "description": "SMS message property",
      "category": "sms"
    },
    "whats_app": {
      "pattern": "whats_app.${whatsapp_property}",
      "friendly": "WhatsApp {whatsapp_property}",
      "description": "WhatsApp message property",
      "category": "whatsapp"
    }
  },

  "fallbackTagPatterns": {
    "forLoopSimple": "\\bfor\\s+\\w+\\s+in\\s+",
    "endfor": "\\bendfor\\b",
    
    "ifStatement": "\\bif\\s+",
    "endif": "\\bendif\\b",
    "else": "\\belse\\b",
    "elseif": "\\belseif\\s+",
    "unless": "\\bunless\\s+",
    "endunless": "\\bendunless\\b",
    "case": "\\bcase\\s+",
    "when": "\\bwhen\\s+",
    "endcase": "\\bendcase\\b",
    
    "assignment": "\\bassign\\s+\\w+\\s*=",
    "capture": "\\bcapture\\s+",
    "endcapture": "\\bendcapture\\b",
    
    "catalogItems": "\\bcatalog_items\\b",
    "catalogSelectionItems": "\\bcatalog_selection_items\\b",
    "connectedContent": "\\bconnected_content\\b",
    "fetch": "\\bfetch\\s+",
    "api": "\\bapi\\s+",
    
    "abortMessage": "\\babort_message\\b",
    "promotion": "\\bpromotion\\b",
    
    "include": "\\binclude\\s+",
    "render": "\\brender\\s+",
    
    "comment": "\\bcomment\\b",
    "endcomment": "\\bendcomment\\b"
  },

  "outputPatterns": {
    "brazeStandardVar": "^\\$\\{([^}]+)\\}$",
    "brazeNestedObject": "^([a-zA-Z_][a-zA-Z0-9_]*)\\.\\$\\{([^}]+)\\}$",
    "brazeObjectProperty": "^([a-zA-Z_][a-zA-Z0-9_]*\\.)+[a-zA-Z_][a-zA-Z0-9_]*$",
    "brazeSubscriptionState": "^subscribed_state\\.\\$\\{([^}]+)\\}$",
    "brazeDeviceAttribute": "^(most_recently_used_device|targeted_device)\\.\\$\\{([^}]+)\\}$",
    "brazeCampaignAttribute": "^(campaign|canvas|card)\\.\\$\\{([^}]+)\\}$",
    "brazeEventProperty": "^event_properties\\.\\$\\{([^}]+)\\}$",
    "brazeMessageProperty": "^(sms|whats_app)\\.\\$\\{([^}]+)\\}$",
    "brazeAppProperty": "^app\\.\\$\\{([^}]+)\\}$",
    "brazeCustomAttribute": "^custom_attribute\\.\\$\\{([^}]+)\\}$",
    
    "customAttribute": "custom_attribute",
    "emailAddress": "email_address",
    "firstName": "first_name",
    "lastName": "last_name",
    "userId": "user_id",
    "userName": "user_name",
    "product": "\\bproduct\\b(?!\\s*s)",
    "products": "\\bproducts\\b",
    "contentBlocks": "content_blocks",
    "recommendedProducts": "recommended_products",
    "campaignName": "campaign\\.name",
    "canvasName": "canvas\\.name",
    "deviceCarrier": "(most_recently_used_device|targeted_device)\\.carrier",
    "deviceModel": "(most_recently_used_device|targeted_device)\\.model",
    "variable": "^\\w+$"
  },

  "fallbackTransformations": {
    "friendly": [
      {
        "regex": "^for\\s+(\\w+)\\s+in\\s+(.+?)(?:\\s+limit:\\s*(\\d+))?$",
        "template": "Repeat for each {2} (showing {3} items)",
        "defaults": { "3": "all" }
      },
      {
        "regex": "^if\\s+(.+)$",
        "template": "Show when: {1}"
      },
      {
        "regex": "^unless\\s+(.+)$",
        "template": "Hide when: {1}"
      },
      {
        "regex": "^assign\\s+(\\w+)\\s*=\\s*(.+)$",
        "template": "Set {1} to: {2}"
      },
      {
        "regex": "^include\\s+['\"]?([^'\"]+)['\"]?$",
        "template": "Insert template: {1}"
      },
      {
        "regex": "^catalog_items\\s+(\\w+)\\s+(.+)$",
        "template": "Fetch {1}: {2}"
      }
    ],
    "technical": [
      {
        "regex": "^for\\s+(\\w+)\\s+in\\s+(.+?)(?:\\s+limit:\\s*(\\d+))?$",
        "template": "for {1} in {2} limit:{3}",
        "defaults": { "3": "" }
      },
      {
        "regex": "^if\\s+(.+)$",
        "template": "if {1}"
      },
      {
        "regex": "^unless\\s+(.+)$", 
        "template": "unless {1}"
      },
      {
        "regex": "^assign\\s+(\\w+)\\s*=\\s*(.+)$",
        "template": "assign {1} = {2}"
      },
      {
        "regex": "^include\\s+['\"]?([^'\"]+)['\"]?$",
        "template": "include '{1}'"
      },
      {
        "regex": "^catalog_items\\s+(\\w+)\\s+(.+)$",
        "template": "catalog_items {1} {2}"
      }
    ]
  },

  "fallbackFilterDescriptions": {
    "id": {
      "withArgs": "ID: {0}",
      "withoutArgs": "with ID"
    },
    "default": {
      "withArgs": "default: {0}",
      "withoutArgs": "with default value"
    },
    "capitalize": {
      "withoutArgs": "capitalized"
    },
    "upcase": {
      "withoutArgs": "uppercase"
    },
    "downcase": {
      "withoutArgs": "lowercase"
    },
    "truncate": {
      "withArgs": "truncated to {0} characters",
      "withoutArgs": "truncated"
    },
    "limit": {
      "withArgs": "limited to {0} items",
      "withoutArgs": "limited"
    },
    "strip": {
      "withoutArgs": "whitespace removed"
    },
    "escape": {
      "withoutArgs": "HTML escaped"
    },
    "join": {
      "withArgs": "joined with {0}",
      "withoutArgs": "joined"
    },
    "split": {
      "withArgs": "split by {0}",
      "withoutArgs": "split"
    },
    "replace": {
      "withArgs": "replace {0} with {1}",
      "withoutArgs": "replaced"
    },
    "remove": {
      "withArgs": "remove {0}",
      "withoutArgs": "removed"
    },
    "append": {
      "withArgs": "append {0}",
      "withoutArgs": "appended"
    },
    "prepend": {
      "withArgs": "prepend {0}",
      "withoutArgs": "prepended"
    }
  },

  "commonVariableMappings": {
    "membership_level": "membership level",
    "max_display": "max display",
    "shopping_cart": "shopping cart",
    "total_points": "total points",
    "bonus_points": "bonus points",
    "email_global": "email global",
    "inbound_message_body": "inbound message body",
    "variant_name": "variant name",
    "geofence_name": "geofence name",
    "user_preferences": "user preferences",
    "ad_tracking_enabled": "ad tracking enabled",
    "foreground_push_enabled": "foreground push enabled",
    "inbound_media_urls": "inbound media urls",
    "preferred_category": "preferred category",
    "api_id": "API ID",
    "most_recent_locale": "most recent locale"
  }
} 